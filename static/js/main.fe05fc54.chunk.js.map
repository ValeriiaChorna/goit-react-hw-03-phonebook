{"version":3,"sources":["components/Layout/Layout.js","components/ContactEditer.js","components/ContactItem.js","components/ContactList.js","components/Filter.js","components/App.js","index.js"],"names":["Layout","children","className","ContactEditer","state","name","number","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onAddContact","this","onSubmit","type","onChange","required","Component","ContactItem","id","onRemoveContact","key","onClick","ContactList","contacts","map","Filter","onChangeFilter","App","filter","addContact","newContact","contact","uuid","v4","some","alert","prevState","removeContact","contactId","changeFilter","getVisibleContacts","toLowerCase","includes","persistedContacts","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","visibleContact","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fe05fc54.chunk.js","sourcesContent":["import React from 'react';\nimport './Layout.css';\n\nconst Layout = ({ children }) => <div className=\"Layout\">{children}</div>;\n\nexport default Layout;","import React, { Component } from 'react';\nimport T from 'prop-types';\n\nexport default class ContactEditer extends Component {\n  static propTypes ={\n    onAddContact: T.func,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onAddContact(this.state);\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <div className=\"contactEdit\">\n        <form  onSubmit={this.handleSubmit}>\n          <label>\n            <p>Name</p>\n            <input\n              type=\"text\"\n              value={name}\n              name=\"name\"\n              onChange={this.handleChange}\n              required\n            ></input>\n          </label>\n          <label>\n            <p>Number</p>\n            <input\n              type=\"text\"\n              value={number}\n              name=\"number\"\n              onChange={this.handleChange}\n              required\n            ></input>\n          </label>\n\n          <button type=\"submit\" className=\"submit\">Add contact</button>\n        </form>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport T from 'prop-types';\n\nexport default function ContactItem({ name, id, number, onRemoveContact }) {\n  return (\n    <li key={id} className=\"contactList\">\n      <p>\n        {name}: {number}\n      </p>\n      <button\n        className=\"deleteButton\"\n        type=\"button\"\n        onClick={() => onRemoveContact(id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n}\n\nContactItem.propTypes = {\n  name: T.string.isRequired,\n  id: T.string.isRequired,\n  number: T.string.isRequired,\n  onRemoveContact: T.func.isRequired,\n};\n","import React from 'react';\nimport T from 'prop-types';\nimport ContactItem from './ContactItem';\n\nexport default function ContactList({ contacts, onRemoveContact }) {\n  return (\n    <ul>\n      {contacts.map(({ name, id, number }) => (\n        <ContactItem\n          key={id}\n          name={name}\n          id={id}\n          number={number}\n          onRemoveContact={onRemoveContact}\n        />\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: T.arrayOf(\n    T.exact({\n      name: T.string,\n      id: T.string,\n      number: T.string,\n    }),\n  ).isRequired,\n  onRemoveContact: T.func.isRequired,\n};\n","import React from 'react';\n\nexport default function Filter({ value, onChangeFilter }) {\n    return (\n      <div>\n        <input\n          type=\"text\"\n          value={value}\n          onChange={e => onChangeFilter(e.target.value)}\n        />\n      </div>\n    );\n  }\n","import React, { Component } from 'react';\nimport Layout from './Layout';\nimport uuid from 'uuid';\nimport ContactEditer from './ContactEditer';\nimport ContactList from './ContactList';\nimport Filter from './Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const persistedContacts = localStorage.getItem('contacts');\n\n    if (persistedContacts) {\n      this.setState({\n        contacts: JSON.parse(persistedContacts),\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addContact = newContact => {\n    const { name, number } = newContact;\n    const { contacts } = this.state;\n    const contact = {\n      id: uuid.v4(),\n      name,\n      number,\n    };\n    if (contacts.some(contact => contact.name === name)) {\n      alert(`${name} is allready exist in contacts.`);\n      return;\n    }\n    this.setState(prevState => {\n      return {\n        contacts: [...prevState.contacts, contact],\n      };\n    });\n  };\n\n  removeContact = contactId => {\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n      };\n    });\n  };\n\n  changeFilter = filter => {\n    this.setState({ filter });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const visibleContact = this.getVisibleContacts();\n    return (\n      <Layout>\n        <h1>Phonebook</h1>\n        <ContactEditer onAddContact={this.addContact} />\n        <h2>Contacts</h2>\n        {contacts.length > 1 && (\n          <div>\n            <h3>Find contact by name</h3>\n            <Filter value={filter} onChangeFilter={this.changeFilter} />\n          </div>\n        )}\n        {visibleContact.length > 0 && (\n          <ContactList\n            contacts={visibleContact}\n            onRemoveContact={this.removeContact}\n          />\n        )}\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}